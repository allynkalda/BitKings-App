{"version":3,"sources":["data/faq.js","components/Section1.js","components/Section3.js","components/Section2.js","components/Faq.js","components/Pricing.js","App.js","serviceWorker.js","index.js"],"names":["section1","section2","Section1","Container","styled","div","SubContainer","CircleContainer","Circle","Line","LineLast","Text","Title","h1","map","item","key","index","className","length","title","body","Section3","props","console","log","useState","toggle","setToggle","onClick","question","Section2","Box","AccordionContainer","show","setShow","chosen","setChosen","num","showAccordion","questions","Faq","Pricing","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f437cec4.chunk.js","sourcesContent":["\nexport const section1 = [\n  { \n    \"index\": 1,\n    \"title\": \"Register and access to BitKings real balance.\",\n    \"body\": \"Registering is a simple process and completely for free. No strings attached.\"\n  },\n  { \n    \"index\": 2,\n    \"title\": \"Choose the most suitable trading screen: Easy or Pro.\",\n    \"body\": \"BitKings has developed two trading screens in order to facilitate trading to all the different crypto traders in the world. You can easily set the mode you prefer on the left column under “trade”. \"\n  },\n  { \n    \"index\": 3,\n    \"title\": \"Buying cryptocurrencies with your credit card?\",\n    \"body\": \"You have come to the right place, simply use the Easy trading screen and select the cryptocurrency you want to purchase and enter your card details. You will instantly see how your pie chart rebalances and shows the newly purchased asset. As simple as that.\"\n  },\n  { \n    \"index\": 4,\n    \"title\": \"Are you unsure about trading cryptocurrencies?\",\n    \"body\": \"No issues whatsoever, BitKings has created a Virtual Balance screen where you can trade in a simulated way. Both Easy and Pro screens are available for you to trade with the initial simulated balance. Once you are confident enough to trade for real, simply switch to your real balance and start trading.\"\n  },\n  { \n    \"index\": 5,\n    \"title\": \"We are here to support you along the way.\",\n    \"body\": \"BitKings Exchange embraces conscious trading, for that, we have enabled a supporting section which contains not only the latest news on the crypto market, but also a shoutbox so that you can share your thoughts and doubts with the whole of BitKings Community. \"\n  },\n]\n\nexport const section2 = [\n        {\n          \"index\": 0,\n          \"title\": \"I am a beginner\",\n          \"questions\": [\n            \"How do I register on BitKings Exchange?\",\n            \"How do I purchase crypto with my credit card on BitKings Exchange?\",\n            \"How do I Deposit to BitKings Exchange?\",\n            \"How do I trade on BitKings Exchange?\",\n            \"How do I Withdraw from BitKings Exchange?\",\n            \"How Do I create an API?\",\n            \"Referral Program and Bounty Programs\",\n            ]\n        },\n        {\n        \"index\": 1,\n        \"title\": \"Account Access\",\n        \"questions\": [\n          \"How do I verify my account?\",\n          \"What are the different verification levels?\",\n          \"Can I verify a corporate account?\",\n          \"How do I unlock my account?\"\n          ]\n        },\n        {\n        \"index\": 2,\n        \"title\": \"Secure Account\",\n        \"questions\": [\n            \"What is a Two-Factor Authentication?\",\n            \"How do I set up my 2 Factor Identification (2FA)?\",\n            \"How do I disable my Two-Factor Authentication?\",\n            \"How do I deal with a 2FA Error?\",\n            \"How does BitKings Exchange secure my personal information?\",\n            \"How do I secure my account?\"\n            ]\n        },\n        {\n        \"index\": 3,\n        \"title\": \"Deposits and Withdrawals\",\n        \"questions\": [\n          \"How can I deposit wrongly?\",\n          \"What happens when I withdraw to the wrong address?\",\n          \"Why am I not receiving emails from BitKings Exchange?\"\n          ]\n        },\n        {\n        \"index\": 4,\n        \"title\": \"Trading\",\n        \"questions\": [\n          \"What is the difference between market and limit trading?\",\n          \"What factors should I consider before making a trade?\",\n          \"What tools presented on BitKings Exchange assist my trading?\"\n          ]\n        },\n      ];","import React from 'react';\nimport styled from 'styled-components';\nimport { section1 } from '../data/faq.js';\n\nexport default function Section1() {\n\n    const Container = styled.div`\n        display:flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n        padding: 3em;\n    `;\n\n    const SubContainer = styled.div`\n        display: flex;\n        flex-direction: row;\n    `;\n\n    const CircleContainer = styled.div`\n        display:flex;\n        flex-direction: column;\n        width: 10vw;\n    `;\n\n    const Circle = styled.div`\n        position: relative;\n        border: 2px solid #00b2e3; \n        border-radius: 100%; \n        width: 3em; \n        line-height: 3em; \n        text-align: center; \n        background-color: #fff; \n        z-index: 2;\n        align-self: center;\n    `;\n\n    const Line = styled.div`\n        border-left: 2px solid #00b2e3;\n        height: 100%;\n        align-self: center;\n    `;\n\n    const LineLast = styled.div`\n        display:none;\n    `;\n\n    const Text = styled.div`\n        width: 70vw;\n        align-self: baseline;\n        text-align: left;\n        margin-top: -10px;\n        margin-bottom: 20px;\n    `;\n\n    const Title = styled.h1`\n        padding-bottom: 20px;\n    `;\n\n    return (\n        <div>\n            <Container>\n                <Title>Everything you need to know about BitKings Exchange.</Title>\n                {\n                    section1.map(item => {\n                        return(\n                        <SubContainer key={item.index}>\n                            <CircleContainer>\n                                <Circle>\n                                <div className=\"step\">{item.index}</div>\n                                </Circle>\n                                {item.index == section1.length ? <LineLast></LineLast> : <Line></Line>}\n                            </CircleContainer>\n                            <Text>\n                                <h3>{item.title}</h3>\n                                <p>{item.body}</p>\n                            </Text>\n                        </SubContainer>\n                        )\n                    })\n                }\n        </Container>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\n\nexport default function Section3(props) {\n\n    console.log(props)\n    const [toggle, setToggle] = useState(false);\n\n    const toggleComponent = () => {\n        setToggle(!toggle);\n    }\n\n    return (\n        <div>\n            <button className=\"accordion\"\n                onClick={() => toggleComponent()}>\n                {props.question}\n                {toggle ? <span>&#9650;</span> : <span>&#9660;</span>}\n            </button>\n            <div className={`content-box ${toggle ? 'open' : 'close'}`}>\n                <p></p>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { section2 } from '../data/faq';\nimport Section3 from './Section3';\n\nexport default function Section2() {\n\n    const Container = styled.div`\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-items: center;\n        padding: 0px 40px 0px 40px;\n    `;\n\n    const Box = styled.div`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 15vw;\n        height: 20vh;\n        box-shadow: 5px 8px 5px #888888;\n        border-radius: 5px;\n        color: white;\n        cursor: pointer;\n\n        &:nth-child(odd) {\n            background: #00b2e3;\n          }\n          \n        &:nth-child(even) {\n            background: #44546A;\n          }\n\n        &:hover {\n            -moz-transform: scale(1.1);\n            -webkit-transform: scale(1.1);\n            -o-transform: scale(1.1);\n            -ms-transform: scale(1.1);\n            transform: scale(1.1);\n\n            -webkit-transition: transform 0.3s ease-in-out;\n            -moz-transition:transform 0.3s ease-in-out;\n            -ms-transition:transform 0.3s ease-in-out;\n        }\n    `;\n\n    const AccordionContainer = styled.div`\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 50px 0px 50px 0px;  \n    `;\n\n    const [show, setShow] = useState(null);\n    const [chosen, setChosen] = useState(null);\n\n    const showAccordion = (num) => {\n        setShow(true);\n        setChosen(num);\n    }\n\n    return (\n        <div>\n            <Container>\n                {\n                    section2 && section2.map(item => {\n                        const num = item.index\n                        return (\n                            <Box key={item.index} \n                            onClick={() => showAccordion(num)}><p>{item.title}</p></Box>\n                        )\n                    })\n                }\n            </Container>\n            <AccordionContainer>\n                {\n                    show ? (\n                        section2[chosen] && section2[chosen].questions.map((question, index) => {\n                            return (\n                                <Section3 key={index} index={index} question={question}></Section3>\n                            )\n                        })\n                    ) : null\n                }\n            </AccordionContainer>\n        </div>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\n\nexport default function Faq() {\n\n    return (\n        <div>\n            <Section1></Section1>\n            <Section2></Section2>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Pricing() {\n    return (\n        <div>\n            <h1>Pricing</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Faq from './components/Faq';\nimport Pricing from './components/Pricing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/faq\" component={Faq}/>\n        <Route path=\"/pricing\" component={Pricing}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}